{
  "name": "ingenerator-mysql",
  "description": "Standard mySQL installation for our applications, including relevant PHP and application config",
  "long_description": "inGenerator MySQL cookbook\n=================================\n[![Build Status](https://travis-ci.org/ingenerator/chef-ingenerator-mysql.png?branch=0.x)](https://travis-ci.org/ingenerator/chef-ingenerator-mysql)\n\nThe `ingenerator-mysql` cookbook supports standard installation of mySQL for our applications\nthat use it, and also defines attributes and recipes that support applications that depend on\nit. For example, if used with our `ingenerator-php` cookbook, the php mysql extension will be\ninstalled as part of the php install.\n\nRequirements\n------------\n- Chef 12.18 or higher\n- **Ruby 2.3 or higher**\n\nInstallation\n------------\nWe recommend adding to your `Berksfile` and using [Berkshelf](http://berkshelf.com/):\n\n```ruby\nsource 'https://chef-supermarket.ingenerator.com'\ncookbook 'ingenerator-mysql', '~>0.4.0'\n```\n\nHave your main project cookbook *depend* on ingenerator-mysql by editing the `metadata.rb` for your cookbook.\n\n```ruby\n# metadata.rb\ndepends 'ingenerator-mysql'\n```\n\nUser passwords\n--------------\n> By default, the root password is set to 'mysql' and the app user password to the project name. This is valid for\n> development environments (which should not have secure credentials for anything) but you **MUST** ensure you define\n> secure passwords for a any production server. Generally available QA and similar hosts that could be compromised\n> should also have secure passwords, different to the ones used in production.\n> The recipes will emit a warning log if you deploy outside Vagrant with an insecure password.\n\nRecipes\n-------\n\n### No default recipe\nAs this cookbook provides both server and client related mysql things, there is no default recipe.\n\n### `ingenerator-mysql::server`\nThis recipe will:\n\n* install a mysql server\n* manage the mysql root password\n* install the mysql client, ruby mysql gem and database bindings for use in chef\n* provision a default mysql client options file at /root/.my.cnf with credentials for root database access\n* create a schema for the application\n* create a non-root user account for the application - by default only with permissions on the app schema\n* if running on vagrant, bind mysql to any interface and allow remote root access so workbench etc work from the host\n\n### `ingenerator-mysql::app_db_server`\nThis is intended to be run on the database server instance for an application (and is included with\nthe standard `ingenerator-mysql::server` recipe above). It provisions an `application_database`\nresource for the default primary schema defined in `node['project']['services']['db']['schema']`.\n\n### `ingenerator-mysql::dev-db`\nThis recipe will:\n\n* provision a standard basic development database if missing\n* run SQL files against the development database if configured or if the dump files have changed\n\nTo use it, add SQL files that take the desired action - generally, drop an entire table and recreate it - as\ncookbook files in your project.\n\n```sql\n/* application-cookbook/files/default/dev_db/users.sql */\nCREATE SCHEMA myapplication IF NOT EXIST;\nDROP TABLE IF EXISTS users;\nCREATE TABLE users /*....\n```\n\nAdd each file to the `node['mysql']['dev_db']['sql_files']` hash - for example:\n\n```ruby\nnode.default['mysql']['dev_db']['sql_files']['application-coobook::dev_db/users.sql'] = true\n```\n\nBy default, the files will be copied to a local path on your machine in order to detect if they\nhave changed since the last deploy. Any changed files will be passed to mysql as root during\ndeployment.\n\nYou can force a reprovision by setting `node['mysql']['dev_db']['recreate_always']` to true -\nfor example, you'd probably do so in a build slave role to ensure the test db was always clean.\n\nAlternatively you can force a one-off reprovision with an environment variable - eg\n`$ RECREATE_DEV_DB=1 architecture/provision dev-server`.\n\nYou should consider setting the attribute from an environment variable in your Vagrantfile to\nallow the same workflow on your host machine.\n\n> **DANGER!**\n> If included, this recipe will without warning run your SQL scripts, probably wiping your entire\n> database. To reduce the risk you accidentally run it on a production box, it will fail if the\n> root password is anything other than \"mysql\". It should be obvious that inclusion of this recipe\n> should be treated with care.\n\n## `ingenerator-mysql::local_admins`\n\nThis recipe is not included by default. If included it will generate a `mysql_local_admin` for\neach user defined in the `node['mysql']['local_admins']` hash of `username => options`.\nUsers are only created if they have a `create` attribute set to true. Use this when you\nwant to define system users before mysql is installed but keep their access definition\nin one place.\n\nIf run in the `:localdev` environment then by default this will also create a user with\nroot privileges for the `vagrant` local system user.\n\nFor example:\n\n```ruby\n# your/project/cookbook/recipes/users.rb\nuser 'phil'\nsudo 'phil'\n\nnode.default['mysql']['local_admins']['phil']['create'] = true\n# Optionally, you can also set a custom default_database and privileges in these\n# attributes.\n\n# And then add ingenerator-mysql::local_admins to your runlist somewhere after\n# mysql is installed and configured.\n```\n\n\nAttributes\n----------\n\nThe cookbook provides and is controlled by a number of default attributes:\n\n* [default](attributes/default.rb) - customisation of mysql config and generic mysql attributes\n* [app_db](attributes/app_db.rb) - attributes related to the application database, including tweaks to related cookbooks\n\n\nResources\n---------\n\n### application_database\n\nThis resource will:\n\n* create a schema for the application to use\n* create / update a restricted-privilege database user for use by general\n  application code - named with the project name by default\n* optionally, if the database is empty, seed it from a file in /tmp/database-seeds/{schema.sql}\n\nIf a database seed file is provided, it will be piped to the schema and then\ndeleted. If it is present on a subsequent run and the database is not empty,\nan exception will be thrown and provisioning aborted.\n\nThe resouce currently has limited direct options, most behaviour is governed by the\n`node['project']['services']['db']` attributes.\n\nThe application database user, by default, can only connect from localhost but\nyou can configure this by setting the\n`node['project']['services']['db']['connect_anywhere']` attribute to true. It\nhas limited permissions which can be customised by setting the appropriate key\nin `node['project']['services']['db']['privileges'][{mysql permission name}]`\nto true.\n\n> **Security Considerations!**\n> Granting granting elevated privileges to a user that runs in the context of a web\n> application is a likely security hole. Before activating additional privileges for\n> the application user you should consider whether you can either use a separate\n> database user (for example, for command line admin tasks that run outside the web\n> context) or implement a message queue or similar so that the web process can only\n> trigger a set of whitelisted application use cases which are executed by a\n> privileged user in a separate process.\n\n### user_mysql_config\n\nProvisions a `.my.cnf` options file for the mysql client with the specified connection\ndetails. Optionally, you can enforce safe queries, a default character set and a default\ndatabase.\n\n```ruby\nuser_mysql_config '/home/me/.my.cnf' do\n  user            'me'\n  mode            0600\n  connection      { username: 'me', password: 'secret', host: '127.0.0.1'}\n  # or use node.mysql_root_connection() for the current root credentials\n  database        'my-schema'\n\n  # enforce the safe-updates mode of mysql where a PK is required to update or delete\n  safe_updates    true\n\n  default_charset 'utf8'\nend\n```\n\n### mysql_default_timezone\n\nUses `mysql_tzinfo_to_sql` to populate mysql timezones from `/usr/share/zoneinfo`\nthen sets a custom configuration file for the default timezone. See the\ncustom_config recipe for usage details. The default timezone is Europe/London -\noverride this with the node.mysql.default-time-zone attribute if required.\n\n[!!] Note that this does not schedule any future updates of the timezone data -\nif you're not routinely building fresh boxes you will need to schedule this.\n\n### mysql_local_admin\n\nProvisions a database user for a system user, and drops a `.my.cnf` in the user's\nhome directory. By default users can do most data manipulation but not modify the\nschema. You can customise the privileges by passing your own array to the resource.\n\nThe user password will come from:\n\n* A `password` option passed to the resource\n* A `node['mysql']['local_admins'][username]['password']` attribute\n* A random secure password that will be persisted into the above node attribute\n  for reuse.\n\n### Testing\nSee the [.travis.yml](.travis.yml) file for the current test scripts.\n\nContributing\n------------\n1. Fork the project\n2. Create a feature branch corresponding to your change\n3. Create specs for your change\n4. Create your changes\n4. Create a Pull Request on github\n\nLicense & Authors\n-----------------\n- Author:: Andrew Coulton (andrew@ingenerator.com)\n\n```text\nCopyright 2012-2013, inGenerator Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Andrew Coulton",
  "maintainer_email": "andrew@ingenerator.com",
  "license": "Apache-2.0",
  "platforms": {
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "apt": "~> 6.0",
    "database": "~> 6.0",
    "ingenerator-helpers": "~> 1.0",
    "mysql": "~> 8.2",
    "mysql2_chef_gem": "~> 2.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
  },
  "version": "0.4.1",
  "source_url": "https://github.com/ingenerator/chef-ingenerator-mysql",
  "issues_url": "https://github.com/ingenerator/chef-ingenerator-mysql/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12.18.31"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}